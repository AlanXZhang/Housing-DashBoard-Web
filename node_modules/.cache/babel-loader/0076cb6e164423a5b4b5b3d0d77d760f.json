{"ast":null,"code":"import _slicedToArray from\"/Users/alanzhang/Housing-DashBoard-Web/hd-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import*as d3 from\"d3\";import\"./AreaStat.css\";// May want to port each component of the Area stat into its own cards for scalability\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AreaStat(props){// Create an event listener that will update the state when the zooms in or out of the map or drag the map.\n// Maybe create a removeEventListener function that will remove the event listener when the component is unmounted.\n// Renders 3 times, first time before any data is loaded, second time when data is loaded, third time when the map is zoomed in or out.\nfunction updateStats(){// Using IQR to measure the spread by removing outliers\nvar areaMin=d3.quantile(props.data,0.10,function(d){return d.price;});var areaMax=d3.quantile(props.data,0.90,function(d){return d.price;});var areaMedian=d3.median(props.data,function(d){return d.price;});var carMinCommuteTime=8;// d3.quantile(props.data, 0.25, d => d.carCommuteTime);\nvar carMaxCommuteTime=16;// d3.quantile(props.data, 0.75, d => d.carCommuteTime);\nvar transitMinCommuteTime=24;// d3.quantile(props.data, 0.25, d => d.transitCommuteTime);\nvar transitMaxCommuteTime=48;// d3.quantile(props.data, 0.75, d => d.transitCommuteTime);\nvar walkingMinCommuteTime=62;// d3.quantile(props.data, 0.25, d => d.walkingCommuteTime);\nvar walkingMaxCommuteTime=168;// d3.quantile(props.data, 0.75, d => d.walkingCommuteTime);\nvar bikingMinCommuteTime=22;// d3.quantile(props.data, 0.25, d => d.bikingCommuteTime);\nvar bikingMaxCommuteTime=56;// d3.quantile(props.data, 0.75, d => d.bikingCommuteTime);\nsetStats({areaMin:parseInt(areaMin),areaMax:parseInt(areaMax),areaAverage:parseInt(areaMedian),carMinCommuteTime:parseInt(carMinCommuteTime),carMaxCommuteTime:parseInt(carMaxCommuteTime),transitMinCommuteTime:parseInt(transitMinCommuteTime),transitMaxCommuteTime:parseInt(transitMaxCommuteTime),walkingMinCommuteTime:parseInt(walkingMinCommuteTime),walkingMaxCommuteTime:parseInt(walkingMaxCommuteTime),bikingMinCommuteTime:parseInt(bikingMinCommuteTime),bikingMaxCommuteTime:parseInt(bikingMaxCommuteTime)});}var _useState=useState(null),_useState2=_slicedToArray(_useState,2),subsetData=_useState2[0],setSubsetData=_useState2[1];// Update the subset data when the map is zoomed in or out\nuseEffect(function(){},[]);function convertMinToTime(min){var hour=Math.floor(min/60);var minute=min%60;var res=hour?\"\".concat(hour,\" hr \").concat(minute,\" min\"):\"\".concat(minute,\" min\");return res;}// Filters the data based on the viewable area of the map and updates the stats in the area\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),stats=_useState4[0],setStats=_useState4[1];// Update stats on launch and whenever the subsetData is updated\nuseEffect(function(){updateStats();},[props.data]);// Need an event listener that changes the subset data and stat when the user moves the map or zooms in or out\nif(stats){//Only render the Area Overview if the stats have been loaded to prevent unncessary renders\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"area-stats\",ref:props.innerRef,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"area--overview\",children:\"Area Overview\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"area--overview-desc\",children:\"The overview will be updated when map moves\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"area--title\",children:\"Price\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"area--price\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"area--price-summary\",children:[\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"area--low bold\",children:[\"$\",stats.areaMin]}),\"/month - \",/*#__PURE__*/_jsxs(\"span\",{className:\"area--high bold\",children:[\"$\",stats.areaMax]}),\"/month\"]}),/*#__PURE__*/_jsxs(\"h4\",{className:\"area--price-summary-text\",children:[\" Median rent price in map area: \",/*#__PURE__*/_jsxs(\"span\",{className:\"bold\",children:[\"$\",stats.areaAverage]})]})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"area--title\",children:\"Commute Time\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"area--commute\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"car-commmute-time flex\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"iconify\",\"data-icon\":\"bx:car\"}),/*#__PURE__*/_jsxs(\"p\",{children:[convertMinToTime(stats.carMinCommuteTime),\" to \",convertMinToTime(stats.carMaxCommuteTime)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"transit-commmute-time flex\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"iconify\",\"data-icon\":\"bx:train\"}),/*#__PURE__*/_jsxs(\"p\",{children:[convertMinToTime(stats.transitMinCommuteTime),\" to \",convertMinToTime(stats.transitMaxCommuteTime)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"walking-commmute-time flex\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"iconify\",\"data-icon\":\"bx:walk\"}),/*#__PURE__*/_jsxs(\"p\",{children:[convertMinToTime(stats.walkingMinCommuteTime),\" to \",convertMinToTime(stats.walkingMaxCommuteTime)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"biking-commmute-time flex\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"iconify\",\"data-icon\":\"ic:baseline-directions-bike\"}),/*#__PURE__*/_jsxs(\"p\",{children:[convertMinToTime(stats.bikingMinCommuteTime),\" to \",convertMinToTime(stats.bikingMaxCommuteTime)]})]})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"area--title\",children:\"Crime rate\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"area--crime flex\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"area--rating\",children:\"A\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"area--rating-description\",children:[\"(Safer than \",/*#__PURE__*/_jsx(\"span\",{className:\"bold\",children:\"70%\"}),\" of US cities)\"]})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"area--title\",children:\"Future rent estimate\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Work in Progress\"})]});}}","map":{"version":3,"names":["React","useState","useEffect","d3","AreaStat","props","updateStats","areaMin","quantile","data","d","price","areaMax","areaMedian","median","carMinCommuteTime","carMaxCommuteTime","transitMinCommuteTime","transitMaxCommuteTime","walkingMinCommuteTime","walkingMaxCommuteTime","bikingMinCommuteTime","bikingMaxCommuteTime","setStats","parseInt","areaAverage","subsetData","setSubsetData","convertMinToTime","min","hour","Math","floor","minute","res","stats","innerRef"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/AreaStat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport \"./AreaStat.css\";\n// May want to port each component of the Area stat into its own cards for scalability\nexport default function AreaStat(props) {\n\n    // Create an event listener that will update the state when the zooms in or out of the map or drag the map.\n    // Maybe create a removeEventListener function that will remove the event listener when the component is unmounted.\n\n    // Renders 3 times, first time before any data is loaded, second time when data is loaded, third time when the map is zoomed in or out.\n    function updateStats() {\n        // Using IQR to measure the spread by removing outliers\n        let areaMin = d3.quantile(props.data, 0.10, d => d.price);\n        let areaMax = d3.quantile(props.data, 0.90, d => d.price);\n        let areaMedian = d3.median(props.data, d => d.price);\n        let carMinCommuteTime = 8 // d3.quantile(props.data, 0.25, d => d.carCommuteTime);\n        let carMaxCommuteTime = 16 // d3.quantile(props.data, 0.75, d => d.carCommuteTime);\n        let transitMinCommuteTime = 24 // d3.quantile(props.data, 0.25, d => d.transitCommuteTime);\n        let transitMaxCommuteTime = 48 // d3.quantile(props.data, 0.75, d => d.transitCommuteTime);\n        let walkingMinCommuteTime = 62 // d3.quantile(props.data, 0.25, d => d.walkingCommuteTime);\n        let walkingMaxCommuteTime = 168 // d3.quantile(props.data, 0.75, d => d.walkingCommuteTime);\n        let bikingMinCommuteTime = 22 // d3.quantile(props.data, 0.25, d => d.bikingCommuteTime);\n        let bikingMaxCommuteTime = 56 // d3.quantile(props.data, 0.75, d => d.bikingCommuteTime);\n        setStats({\n            areaMin: parseInt(areaMin),\n            areaMax: parseInt(areaMax),\n            areaAverage: parseInt(areaMedian),\n            carMinCommuteTime: parseInt(carMinCommuteTime),\n            carMaxCommuteTime: parseInt(carMaxCommuteTime),\n            transitMinCommuteTime: parseInt(transitMinCommuteTime),\n            transitMaxCommuteTime: parseInt(transitMaxCommuteTime),\n            walkingMinCommuteTime: parseInt(walkingMinCommuteTime),\n            walkingMaxCommuteTime: parseInt(walkingMaxCommuteTime),\n            bikingMinCommuteTime: parseInt(bikingMinCommuteTime),\n            bikingMaxCommuteTime: parseInt(bikingMaxCommuteTime),\n        });\n    }\n\n    const [subsetData, setSubsetData] = useState(null)\n    \n    // Update the subset data when the map is zoomed in or out\n    useEffect(() => {\n\n    }, []);\n\n    function convertMinToTime(min) {\n        let hour = Math.floor(min / 60);\n        let minute = min % 60;\n        let res = hour ? `${hour} hr ${minute} min` : `${minute} min`;\n        return res;\n    }\n\n    // Filters the data based on the viewable area of the map and updates the stats in the area\n    const [stats, setStats] = useState(null);\n\n    // Update stats on launch and whenever the subsetData is updated\n    useEffect(() => {\n        updateStats();\n    }, [props.data]);\n\n    // Need an event listener that changes the subset data and stat when the user moves the map or zooms in or out\n\n    if (stats) { //Only render the Area Overview if the stats have been loaded to prevent unncessary renders\n        return (\n            <div className=\"area-stats\" ref={props.innerRef}>\n                <h2 className='area--overview'>Area Overview</h2>\n                <h3 className=\"area--overview-desc\">The overview will be updated when map moves</h3>\n                <h3 className='area--title'>Price</h3>\n                <div className='area--price'>\n                    <h4 className='area--price-summary'> <span className=\"area--low bold\">${stats.areaMin}</span>/month - <span className=\"area--high bold\">${stats.areaMax}</span>/month</h4>\n                    <h4 className='area--price-summary-text'> Median rent price in map area: <span className=\"bold\">${stats.areaAverage}</span></h4>\n                </div>\n\n                <h3 className='area--title'>Commute Time</h3>\n                <div className='area--commute'>\n                    <div className='car-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"bx:car\"></span>\n                        <p>{convertMinToTime(stats.carMinCommuteTime)} to {convertMinToTime(stats.carMaxCommuteTime)}</p>\n                    </div>\n                    <div className='transit-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"bx:train\"></span>\n                        <p>{convertMinToTime(stats.transitMinCommuteTime)} to {convertMinToTime(stats.transitMaxCommuteTime)}</p>\n                    </div>\n                    <div className='walking-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"bx:walk\"></span>\n                        <p>{convertMinToTime(stats.walkingMinCommuteTime)} to {convertMinToTime(stats.walkingMaxCommuteTime)}</p>\n                    </div>\n                    <div className='biking-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"ic:baseline-directions-bike\"></span>\n                        <p>{convertMinToTime(stats.bikingMinCommuteTime)} to {convertMinToTime(stats.bikingMaxCommuteTime)}</p>\n                    </div>\n                </div>\n                <h3 className='area--title'>Crime rate</h3>\n                <div className='area--crime flex'>\n                    <p className=\"area--rating\">A</p>\n                    <p className=\"area--rating-description\">(Safer than <span className=\"bold\">70%</span> of US cities)</p>\n                    {/* Placeholder Rating Icon e.g. A, B, C */}\n                </div>\n                <h3 className=\"area--title\">Future rent estimate</h3>\n                <p>Work in Progress</p>\n                {/* May not implement rent estimate on MVP */}\n                {/* <div className='area--rent-estimate'></div>  */}\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}