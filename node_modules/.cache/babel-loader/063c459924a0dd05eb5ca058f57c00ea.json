{"ast":null,"code":"var _jsxFileName = \"/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport AreaStat from \"./components/AreaStat\";\nimport listingData from './assets/data/proc_zillow.csv'; // This needs to be replaced by a HTTP request\n\nimport Map from \"./components/Map\";\nimport Listing from \"./components/Listings\";\nimport SwapButton from \"./components/SwapButton\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Parser function for the csv file\n  function rowConverter(d) {\n    return { ...d,\n      sqft: +d.sqft,\n      num_baths: +d.num_baths,\n      num_beds: +d.num_beds,\n      lat: +d.lat,\n      lng: +d.lon,\n      price: +d.price\n    };\n  }\n\n  ; // Stores the raw data from the csv file obtained through an API/Fetch call\n\n  const [mapData, setMapData] = useState(null); // Loading data from the csv file\n\n  useEffect(() => {\n    d3.csv(listingData, rowConverter).then(listingData => {\n      setMapData(listingData);\n    });\n  }, []);\n  console.log(mapData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [mapData && /*#__PURE__*/_jsxDEV(Map, {\n      data: mapData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this), mapData && /*#__PURE__*/_jsxDEV(Listing, {\n      data: mapData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(SwapButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"tfr58apwqtG+o1X9ZCcq3mb3/DM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AreaStat","listingData","Map","Listing","SwapButton","d3","App","rowConverter","d","sqft","num_baths","num_beds","lat","lng","lon","price","mapData","setMapData","csv","then","console","log"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./App.css\";\nimport AreaStat from \"./components/AreaStat\";\nimport listingData from './assets/data/proc_zillow.csv'; // This needs to be replaced by a HTTP request\nimport Map from \"./components/Map\";\nimport Listing from \"./components/Listings\"\nimport SwapButton from \"./components/SwapButton\"\nimport * as d3 from \"d3\";\n\nexport default function App() {\n\n    // Parser function for the csv file\n    function rowConverter(d) {\n        return {\n            ...d,\n            sqft: +d.sqft,\n            num_baths: +d.num_baths,\n            num_beds: +d.num_beds,\n            lat: +d.lat,\n            lng: +d.lon,\n            price: +d.price,\n        };\n    };\n\n    // Stores the raw data from the csv file obtained through an API/Fetch call\n    const [mapData, setMapData] = useState(null);\n\n    // Loading data from the csv file\n    useEffect(() => {\n        d3.csv(listingData, rowConverter)\n            .then((listingData) => {\n                setMapData(listingData);\n            })\n    }, []);\n\n    console.log(mapData)\n    return (\n        <div className=\"App\">\n            {/* Only Render in the Area Stat once the data has been loaded NOTE: data only evaluates to true if it is not null*/}\n            {/* {mapData && <AreaStat data={mapData} />} */}\n            {mapData && <Map data={mapData} />}\n            {mapData && <Listing data={mapData} />}\n            <SwapButton />\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CAAyD;;AACzD,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE1B;EACA,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACrB,OAAO,EACH,GAAGA,CADA;MAEHC,IAAI,EAAE,CAACD,CAAC,CAACC,IAFN;MAGHC,SAAS,EAAE,CAACF,CAAC,CAACE,SAHX;MAIHC,QAAQ,EAAE,CAACH,CAAC,CAACG,QAJV;MAKHC,GAAG,EAAE,CAACJ,CAAC,CAACI,GALL;MAMHC,GAAG,EAAE,CAACL,CAAC,CAACM,GANL;MAOHC,KAAK,EAAE,CAACP,CAAC,CAACO;IAPP,CAAP;EASH;;EAAA,CAbyB,CAe1B;;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAD,CAAtC,CAhB0B,CAkB1B;;EACAC,SAAS,CAAC,MAAM;IACZM,EAAE,CAACa,GAAH,CAAOjB,WAAP,EAAoBM,YAApB,EACKY,IADL,CACWlB,WAAD,IAAiB;MACnBgB,UAAU,CAAChB,WAAD,CAAV;IACH,CAHL;EAIH,CALQ,EAKN,EALM,CAAT;EAOAmB,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,WAGKA,OAAO,iBAAI,QAAC,GAAD;MAAK,IAAI,EAAEA;IAAX;MAAA;MAAA;MAAA;IAAA,QAHhB,EAIKA,OAAO,iBAAI,QAAC,OAAD;MAAS,IAAI,EAAEA;IAAf;MAAA;MAAA;MAAA;IAAA,QAJhB,eAKI,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GApCuBV,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}