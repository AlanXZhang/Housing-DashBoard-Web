{"ast":null,"code":"var _jsxFileName = \"/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/AreaStat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AreaStat(props) {\n  _s();\n\n  // Create an event listener that will update the state when the zooms in or out of the map or drag the map.\n  // Maybe create a removeEventListener function that will remove the event listener when the component is unmounted.\n  // Renders 3 times, first time before any data is loaded, second time when data is loaded, third time when the map is zoomed in or out.\n  function updateStats() {\n    // Using IQR to measure the spread by removing outliers\n    let areaMin = d3.quantile(props.data, 0.25, d => d.price);\n    let areaMax = d3.quantile(props.data, 0.75, d => d.price);\n    let areaAverage = d3.median(props.data, d => d.price);\n    let carMinCommuteTime = 0; //Function when I get the feature engineered dataset: d3.min(data, d => d.carCommuteTime);\n\n    let carMaxCommuteTime = 0; //Function when I get the feature engineered dataset: d3.max(data, d => d.carCommuteTime);\n\n    let transitMinCommuteTime = 0; //Function when I get the feature engineered dataset: d3.min(data, d => d.transitCommuteTime);\n\n    let transitMaxCommuteTime = 0; //Function when I get the feature engineered dataset: d3.max(data, d => d.transitCommuteTime);\n\n    let walkingMinCommuteTime = 0; //Function when I get the feature engineered dataset: d3.min(data, d => d.walkingCommuteTime);\n\n    let walkingMaxCommuteTime = 0; //Function when I get the feature engineered dataset: d3.max(data, d => d.walkingCommuteTime);\n\n    let bikingMinCommuteTime = 0; //Function when I get the feature engineered dataset: d3.min(data, d => d.bikingCommuteTime);\n\n    let bikingMaxCommuteTime = 0; //Function when I get the feature engineered dataset: d3.max(data, d => d.bikingCommuteTime);\n\n    setStats({\n      areaMin: parseInt(areaMin),\n      areaMax: parseInt(areaMax),\n      areaAverage: parseInt(areaAverage),\n      carMinCommuteTime: carMinCommuteTime,\n      carMaxCommuteTime: carMaxCommuteTime,\n      transitMinCommuteTime: transitMinCommuteTime,\n      transitMaxCommuteTime: transitMaxCommuteTime,\n      walkingMinCommuteTime: walkingMinCommuteTime,\n      walkingMaxCommuteTime: walkingMaxCommuteTime,\n      bikingMinCommuteTime: bikingMinCommuteTime,\n      bikingMaxCommuteTime: bikingMaxCommuteTime\n    });\n  } // Filters the data based on the viewable area of the map and updates the stats in the area\n\n\n  const [stats, setStats] = useState(null);\n  const [subsetData, setSubsetData] = useState(props.data);\n  useEffect(() => {\n    updateStats();\n  }, []);\n  console.log(subsetData);\n  console.log(stats);\n\n  if (stats) {\n    //Only render the Area Overview if the stats have been loaded to prevent unncessary renders\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"area--title\",\n        children: \"Area Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--price\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" \", `$${stats.areaMin}/month - $${stats.areaMax}/month`, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\" \", `Average Rent price in map area: $${stats.areaAverage}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--commute\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"car-commmute-time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" min to 16 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transit-commmute-time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"8 min to 16 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"walking-commmute-time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"8 min to 16 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"biking-commmute-time\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"8 min to 16 min\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--crime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--rent-estimate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AreaStat, \"a6PysT4PAncVKiJkaNbxyeYYH9g=\");\n\n_c = AreaStat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaStat\");","map":{"version":3,"names":["React","useState","useEffect","d3","AreaStat","props","updateStats","areaMin","quantile","data","d","price","areaMax","areaAverage","median","carMinCommuteTime","carMaxCommuteTime","transitMinCommuteTime","transitMaxCommuteTime","walkingMinCommuteTime","walkingMaxCommuteTime","bikingMinCommuteTime","bikingMaxCommuteTime","setStats","parseInt","stats","subsetData","setSubsetData","console","log"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/AreaStat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as d3 from \"d3\";\n\nexport default function AreaStat(props) {\n\n    // Create an event listener that will update the state when the zooms in or out of the map or drag the map.\n    // Maybe create a removeEventListener function that will remove the event listener when the component is unmounted.\n\n    // Renders 3 times, first time before any data is loaded, second time when data is loaded, third time when the map is zoomed in or out.\n    function updateStats() {\n        // Using IQR to measure the spread by removing outliers\n        let areaMin = d3.quantile(props.data, 0.25, d => d.price);\n        let areaMax = d3.quantile(props.data, 0.75, d => d.price);\n        let areaAverage = d3.median(props.data, d => d.price);\n        let carMinCommuteTime = 0 //Function when I get the feature engineered dataset: d3.min(data, d => d.carCommuteTime);\n        let carMaxCommuteTime = 0 //Function when I get the feature engineered dataset: d3.max(data, d => d.carCommuteTime);\n        let transitMinCommuteTime = 0 //Function when I get the feature engineered dataset: d3.min(data, d => d.transitCommuteTime);\n        let transitMaxCommuteTime = 0 //Function when I get the feature engineered dataset: d3.max(data, d => d.transitCommuteTime);\n        let walkingMinCommuteTime = 0 //Function when I get the feature engineered dataset: d3.min(data, d => d.walkingCommuteTime);\n        let walkingMaxCommuteTime = 0 //Function when I get the feature engineered dataset: d3.max(data, d => d.walkingCommuteTime);\n        let bikingMinCommuteTime = 0 //Function when I get the feature engineered dataset: d3.min(data, d => d.bikingCommuteTime);\n        let bikingMaxCommuteTime = 0 //Function when I get the feature engineered dataset: d3.max(data, d => d.bikingCommuteTime);\n        setStats({\n            areaMin: parseInt(areaMin),\n            areaMax: parseInt(areaMax),\n            areaAverage: parseInt(areaAverage),\n            carMinCommuteTime: carMinCommuteTime,\n            carMaxCommuteTime: carMaxCommuteTime,\n            transitMinCommuteTime: transitMinCommuteTime,\n            transitMaxCommuteTime: transitMaxCommuteTime,\n            walkingMinCommuteTime: walkingMinCommuteTime,\n            walkingMaxCommuteTime: walkingMaxCommuteTime,\n            bikingMinCommuteTime: bikingMinCommuteTime,\n            bikingMaxCommuteTime: bikingMaxCommuteTime,\n        });\n    }\n\n    // Filters the data based on the viewable area of the map and updates the stats in the area\n    const [stats, setStats] = useState(null);\n    const [subsetData, setSubsetData] = useState(props.data)\n\n    useEffect(() => {\n        updateStats();\n    }, []);\n    console.log(subsetData);\n    console.log(stats);\n\n    if (stats) { //Only render the Area Overview if the stats have been loaded to prevent unncessary renders\n        return (\n            <div className=\"area-stats\">\n                <h3 className='area--title'>Area Overview</h3>\n                <div className='area--price'>\n                    <h4> {`$${stats.areaMin}/month - $${stats.areaMax}/month`} </h4>\n                    <h4> {`Average Rent price in map area: $${stats.areaAverage}`}</h4>\n                </div>\n                <div className='area--commute'>\n                    <div className='car-commmute-time'>\n                        {/* placeholder icon */}\n                        <p> min to 16 min</p>\n                    </div>\n                    <div className='transit-commmute-time'>\n                        {/* placeholder icon */}\n                        <p>8 min to 16 min</p>\n                    </div>\n                    <div className='walking-commmute-time'>\n                        {/* placeholder icon */}\n                        <p>8 min to 16 min</p>\n                    </div>\n                    <div className='biking-commmute-time'>\n                        {/* placeholder icon */}\n                        <p>8 min to 16 min</p>\n                    </div>\n                </div>\n                <div className='area--crime'></div>\n                <div className='area--rent-estimate'></div>\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}