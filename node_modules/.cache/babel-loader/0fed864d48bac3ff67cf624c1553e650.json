{"ast":null,"code":"var _jsxFileName = \"/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"./App.css\";\nimport AreaStat from \"./components/AreaStat\";\nimport listingData from './assets/data/final_df.csv'; // This needs to be replaced by a HTTP request\n\nimport Map from \"./components/Map\";\nimport Listings from \"./components/Listings\";\nimport SwapButton from \"./components/SwapButton\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // Parser function for the csv file\n  function rowConverter(d) {\n    return {\n      sqft: +d.sqft,\n      num_baths: +d.num_baths,\n      num_beds: +d.num_beds,\n      lat: +d.lat,\n      lng: +d.lon,\n      price: +d.price,\n      address: d.address,\n      full_address: d.full_address,\n      zAddress: d.Address,\n      house_type: d.houseType,\n      image: d.Images,\n      description: d.Description,\n      floorplan: d.floorplan\n    };\n  }\n\n  ;\n\n  const switchTab = () => {\n    if (currTab === \"stats\") {\n      areaStatRef.current.style.animation = \"slidein .25s normal reverse ease\";\n      setTimeout(() => {\n        setCurrTab(\"listings\");\n      }, 250);\n    } else {\n      listingsRef.current.style.animation = \"slidein .25s normal reverse ease\";\n      setTimeout(() => {\n        setCurrTab(\"stats\");\n      }, 250);\n    }\n  }; // Stores the raw data from the csv file obtained through an API/Fetch call\n\n\n  const [mapData, setMapData] = useState(null);\n  const [currTab, setCurrTab] = useState(\"stats\"); // Loading data from the csv file\n\n  useEffect(() => {\n    d3.csv(listingData, rowConverter).then(listingData => {\n      setMapData(listingData);\n    });\n  }, []);\n  const areaStatRef = useRef(null);\n  const listingsRef = useRef(null);\n\n  if (mapData) {\n    {\n      /* Only Render in the Area Stat once the data has been loaded NOTE: data only evaluates to true if it is not null*/\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        data: mapData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), currTab === \"stats\" ? /*#__PURE__*/_jsxDEV(AreaStat, {\n        data: mapData,\n        ref: areaStatRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Listings, {\n        data: mapData,\n        ref: areaStatRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SwapButton, {\n        handleClick: switchTab,\n        state: currTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"failed\",\n      children: \"Please wait while the data is loaded...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"lpCJeoXLMs2ZEkoop7rvJaPTqXA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AreaStat","listingData","Map","Listings","SwapButton","d3","App","rowConverter","d","sqft","num_baths","num_beds","lat","lng","lon","price","address","full_address","zAddress","Address","house_type","houseType","image","Images","description","Description","floorplan","switchTab","currTab","areaStatRef","current","style","animation","setTimeout","setCurrTab","listingsRef","mapData","setMapData","csv","then"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport \"./App.css\";\nimport AreaStat from \"./components/AreaStat\";\nimport listingData from './assets/data/final_df.csv'; // This needs to be replaced by a HTTP request\nimport Map from \"./components/Map\";\nimport Listings from \"./components/Listings\"\nimport SwapButton from \"./components/SwapButton\"\nimport * as d3 from \"d3\";\n\nexport default function App() {\n\n    // Parser function for the csv file\n    function rowConverter(d) {\n        return {\n            sqft: +d.sqft,\n            num_baths: +d.num_baths,\n            num_beds: +d.num_beds,\n            lat: +d.lat,\n            lng: +d.lon,\n            price: +d.price,\n            address: d.address,\n            full_address: d.full_address,\n            zAddress: d.Address,\n            house_type: d.houseType,\n            image: d.Images,\n            description: d.Description,\n            floorplan: d.floorplan,\n        };\n    };\n\n    const switchTab = () => {\n        if (currTab === \"stats\") {\n            areaStatRef.current.style.animation = \"slidein .25s normal reverse ease\";\n\n            setTimeout(() => {\n                setCurrTab(\"listings\");\n            }, 250);\n        } else {\n            listingsRef.current.style.animation = \"slidein .25s normal reverse ease\";\n\n            setTimeout(() => {\n                setCurrTab(\"stats\");\n            }, 250);\n        }\n    }\n\n    // Stores the raw data from the csv file obtained through an API/Fetch call\n    const [mapData, setMapData] = useState(null);\n    const [currTab, setCurrTab] = useState(\"stats\");\n\n    // Loading data from the csv file\n    useEffect(() => {\n        d3.csv(listingData, rowConverter)\n            .then((listingData) => {\n                setMapData(listingData);\n            })\n    }, []);\n\n    const areaStatRef = useRef(null);\n    const listingsRef = useRef(null);\n\n    if (mapData) {\n        {/* Only Render in the Area Stat once the data has been loaded NOTE: data only evaluates to true if it is not null*/ }\n        return (\n            <div className=\"App\">\n                <Map data={mapData} />\n                {currTab === \"stats\" ?\n                    <AreaStat data={mapData} ref={areaStatRef} /> :\n                    <Listings data={mapData} ref={areaStatRef} />\n                }\n                <SwapButton handleClick={switchTab} state={currTab} />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"failed\">\n                Please wait while the data is loaded...\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}