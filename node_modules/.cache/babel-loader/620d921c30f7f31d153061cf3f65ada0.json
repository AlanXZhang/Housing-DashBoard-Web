{"ast":null,"code":"var _jsxFileName = \"/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./Map.css\";\nimport GoogleMapReact from 'google-map-react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map(props) {\n  _s();\n\n  const [mapCenter, setMapCenter] = useState({\n    lat: 32.86867512568862,\n    lng: -117.21368983643102\n  });\n  const [mapZoom, setMapZoom] = useState(14);\n  const [heatmapData, setHeatmapData] = React.useState({}); // Use square root transformation of the price variable to deal with right skewed data \n\n  useEffect(() => {\n    const median_price = d3.median(props.data, d => d.price);\n    let logScale = d3.scaleLog().domain([0, d3.max(props.data, d => d.price)]).range([2, 3]);\n    console.log(logScale(50));\n    const positionArr = props.data.map(d => ({\n      lat: d.lat,\n      lng: d.lng,\n      weight: logScale(d.price + 1) // weight: d.price <= 0 ? 0 : Math.sqrt(d.price)\n\n    }));\n    console.log(positionArr);\n    const tempHeatmapData = {\n      positions: positionArr,\n      options: {\n        radius: 55,\n        opacity: 0.75,\n        dissipating: true // gradient: ,\n        // maxIntensity: , \n\n      }\n    };\n    setHeatmapData(tempHeatmapData);\n  }, [props.data]);\n  console.log(heatmapData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Map\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyCnasDuC3M7MHKCLlxqXU3vyJnzKAnwBTw\",\n        libraries: ['visualization']\n      },\n      defaultCenter: mapCenter,\n      defaultZoom: mapZoom,\n      heatmap: heatmapData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"yP830ZGbc/f0Exb2lkUJuvoEFt0=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMapReact","d3","Map","props","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","heatmapData","setHeatmapData","median_price","median","data","d","price","logScale","scaleLog","domain","max","range","console","log","positionArr","map","weight","tempHeatmapData","positions","options","radius","opacity","dissipating","key","libraries"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Map.css\";\nimport GoogleMapReact from 'google-map-react';\nimport * as d3 from 'd3';\n\nexport default function Map(props) {\n    const [mapCenter, setMapCenter] = useState({ lat: 32.86867512568862, lng: -117.21368983643102 });\n    const [mapZoom, setMapZoom] = useState(14);\n    const [heatmapData, setHeatmapData] = React.useState({});\n\n    // Use square root transformation of the price variable to deal with right skewed data \n    useEffect(() => {\n        const median_price = d3.median(props.data, d => d.price);\n        let logScale = d3.scaleLog()\n            .domain([0, d3.max(props.data, d=>d.price)])\n            .range([2, 3]);\n\n        console.log(logScale(50))\n        const positionArr = props.data.map(d => ({\n            lat: d.lat,\n            lng: d.lng,\n            weight: logScale(d.price+1),\n            // weight: d.price <= 0 ? 0 : Math.sqrt(d.price)\n        })\n        );\n        console.log(positionArr)\n        const tempHeatmapData = {\n            positions: positionArr,\n            options: {\n                radius: 55,\n                opacity: 0.75,\n                dissipating: true,\n                // gradient: ,\n                // maxIntensity: , \n            }\n        };\n        setHeatmapData(tempHeatmapData);\n    }, [props.data]);\n\n    console.log(heatmapData)\n\n    return (\n        <div className=\"Map\">\n            <GoogleMapReact\n                bootstrapURLKeys={{\n                    key: \"AIzaSyCnasDuC3M7MHKCLlxqXU3vyJnzKAnwBTw\",\n                    libraries: ['visualization']\n                }}\n                defaultCenter={mapCenter}\n                defaultZoom={mapZoom}\n                heatmap={heatmapData}\n            >\n            </GoogleMapReact>\n        </div>\n    )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;EAAA;;EAC/B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;IAAEQ,GAAG,EAAE,iBAAP;IAA0BC,GAAG,EAAE,CAAC;EAAhC,CAAD,CAA1C;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCd,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC,CAH+B,CAK/B;;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMa,YAAY,GAAGX,EAAE,CAACY,MAAH,CAAUV,KAAK,CAACW,IAAhB,EAAsBC,CAAC,IAAIA,CAAC,CAACC,KAA7B,CAArB;IACA,IAAIC,QAAQ,GAAGhB,EAAE,CAACiB,QAAH,GACVC,MADU,CACH,CAAC,CAAD,EAAIlB,EAAE,CAACmB,GAAH,CAAOjB,KAAK,CAACW,IAAb,EAAmBC,CAAC,IAAEA,CAAC,CAACC,KAAxB,CAAJ,CADG,EAEVK,KAFU,CAEJ,CAAC,CAAD,EAAI,CAAJ,CAFI,CAAf;IAIAC,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAAC,EAAD,CAApB;IACA,MAAMO,WAAW,GAAGrB,KAAK,CAACW,IAAN,CAAWW,GAAX,CAAeV,CAAC,KAAK;MACrCT,GAAG,EAAES,CAAC,CAACT,GAD8B;MAErCC,GAAG,EAAEQ,CAAC,CAACR,GAF8B;MAGrCmB,MAAM,EAAET,QAAQ,CAACF,CAAC,CAACC,KAAF,GAAQ,CAAT,CAHqB,CAIrC;;IAJqC,CAAL,CAAhB,CAApB;IAOAM,OAAO,CAACC,GAAR,CAAYC,WAAZ;IACA,MAAMG,eAAe,GAAG;MACpBC,SAAS,EAAEJ,WADS;MAEpBK,OAAO,EAAE;QACLC,MAAM,EAAE,EADH;QAELC,OAAO,EAAE,IAFJ;QAGLC,WAAW,EAAE,IAHR,CAIL;QACA;;MALK;IAFW,CAAxB;IAUArB,cAAc,CAACgB,eAAD,CAAd;EACH,CA1BQ,EA0BN,CAACxB,KAAK,CAACW,IAAP,CA1BM,CAAT;EA4BAQ,OAAO,CAACC,GAAR,CAAYb,WAAZ;EAEA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI,QAAC,cAAD;MACI,gBAAgB,EAAE;QACduB,GAAG,EAAE,yCADS;QAEdC,SAAS,EAAE,CAAC,eAAD;MAFG,CADtB;MAKI,aAAa,EAAE9B,SALnB;MAMI,WAAW,EAAEI,OANjB;MAOI,OAAO,EAAEE;IAPb;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GAlDuBR,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}