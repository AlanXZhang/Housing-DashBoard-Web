{"ast":null,"code":"var _jsxFileName = \"/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/AreaStat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport \"./AreaStat.css\"; // May want to port each component of the Area stat into its own cards for scalability\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AreaStat(props) {\n  _s();\n\n  // Create an event listener that will update the state when the zooms in or out of the map or drag the map.\n  // Maybe create a removeEventListener function that will remove the event listener when the component is unmounted.\n  // Renders 3 times, first time before any data is loaded, second time when data is loaded, third time when the map is zoomed in or out.\n  function updateStats() {\n    // Using IQR to measure the spread by removing outliers\n    let areaMin = d3.quantile(props.data, 0.10, d => d.price);\n    let areaMax = d3.quantile(props.data, 0.90, d => d.price);\n    let areaMedian = d3.median(props.data, d => d.price);\n    let carMinCommuteTime = 8; // d3.quantile(props.data, 0.25, d => d.carCommuteTime);\n\n    let carMaxCommuteTime = 16; // d3.quantile(props.data, 0.75, d => d.carCommuteTime);\n\n    let transitMinCommuteTime = 24; // d3.quantile(props.data, 0.25, d => d.transitCommuteTime);\n\n    let transitMaxCommuteTime = 48; // d3.quantile(props.data, 0.75, d => d.transitCommuteTime);\n\n    let walkingMinCommuteTime = 62; // d3.quantile(props.data, 0.25, d => d.walkingCommuteTime);\n\n    let walkingMaxCommuteTime = 168; // d3.quantile(props.data, 0.75, d => d.walkingCommuteTime);\n\n    let bikingMinCommuteTime = 22; // d3.quantile(props.data, 0.25, d => d.bikingCommuteTime);\n\n    let bikingMaxCommuteTime = 56; // d3.quantile(props.data, 0.75, d => d.bikingCommuteTime);\n\n    setStats({\n      areaMin: parseInt(areaMin),\n      areaMax: parseInt(areaMax),\n      areaAverage: parseInt(areaMedian),\n      carMinCommuteTime: parseInt(carMinCommuteTime),\n      carMaxCommuteTime: parseInt(carMaxCommuteTime),\n      transitMinCommuteTime: parseInt(transitMinCommuteTime),\n      transitMaxCommuteTime: parseInt(transitMaxCommuteTime),\n      walkingMinCommuteTime: parseInt(walkingMinCommuteTime),\n      walkingMaxCommuteTime: parseInt(walkingMaxCommuteTime),\n      bikingMinCommuteTime: parseInt(bikingMinCommuteTime),\n      bikingMaxCommuteTime: parseInt(bikingMaxCommuteTime)\n    });\n  }\n\n  const [subsetData, setSubsetData] = useState(null); // Update the subset data when the map is zoomed in or out\n\n  useEffect(() => {}, []);\n\n  function convertMinToTime(min) {\n    let hour = Math.floor(min / 60);\n    let minute = min % 60;\n    let res = hour ? `${hour} hr ${minute} min` : `${minute} min`;\n    return res;\n  } // Filters the data based on the viewable area of the map and updates the stats in the area\n\n\n  const [stats, setStats] = useState(null); // Update stats on launch and whenever the subsetData is updated\n\n  useEffect(() => {\n    updateStats();\n  }, [props.data]); // Need an event listener that changes the subset data and stat when the user moves the map or zooms in or out\n\n  if (stats) {\n    //Only render the Area Overview if the stats have been loaded to prevent unncessary renders\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"area-stats\",\n      ref: props.innerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"area--overview\",\n        children: \"Area Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"area--overview-desc\",\n        children: \"The overview will be updated when map moves\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"area--title\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--price\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"area--price-summary\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"area--low bold\",\n            children: [\"$\", stats.areaMin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 58\n          }, this), \"/month - \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"area--high bold\",\n            children: [\"$\", stats.areaMax]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 123\n          }, this), \"/month\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"area--price-summary-text\",\n          children: [\" Median rent price in map area: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: [\"$\", stats.areaAverage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"area--title\",\n        children: \"Commute Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--commute\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"car-commmute-time flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconify\",\n            \"data-icon\": \"bx:car\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convertMinToTime(stats.carMinCommuteTime), \" to \", convertMinToTime(stats.carMaxCommuteTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transit-commmute-time flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconify\",\n            \"data-icon\": \"bx:train\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convertMinToTime(stats.transitMinCommuteTime), \" to \", convertMinToTime(stats.transitMaxCommuteTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"walking-commmute-time flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconify\",\n            \"data-icon\": \"bx:walk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convertMinToTime(stats.walkingMinCommuteTime), \" to \", convertMinToTime(stats.walkingMaxCommuteTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"biking-commmute-time flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"iconify\",\n            \"data-icon\": \"ic:baseline-directions-bike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [convertMinToTime(stats.bikingMinCommuteTime), \" to \", convertMinToTime(stats.bikingMaxCommuteTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"area--title\",\n        children: \"Crime rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"area--crime flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"area--rating\",\n          children: \"A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"area--rating-description\",\n          children: [\"(Safer than \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bold\",\n            children: \"70%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 73\n          }, this), \" of US cities)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"area--title\",\n        children: \"Future rent estimate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AreaStat, \"bJlaBf/bCOGBxiqJm/v9k6vGJdw=\");\n\n_c = AreaStat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaStat\");","map":{"version":3,"names":["React","useState","useEffect","d3","AreaStat","props","updateStats","areaMin","quantile","data","d","price","areaMax","areaMedian","median","carMinCommuteTime","carMaxCommuteTime","transitMinCommuteTime","transitMaxCommuteTime","walkingMinCommuteTime","walkingMaxCommuteTime","bikingMinCommuteTime","bikingMaxCommuteTime","setStats","parseInt","areaAverage","subsetData","setSubsetData","convertMinToTime","min","hour","Math","floor","minute","res","stats","innerRef"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/components/AreaStat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as d3 from \"d3\";\nimport \"./AreaStat.css\";\n// May want to port each component of the Area stat into its own cards for scalability\nexport default function AreaStat(props) {\n\n    // Create an event listener that will update the state when the zooms in or out of the map or drag the map.\n    // Maybe create a removeEventListener function that will remove the event listener when the component is unmounted.\n\n    // Renders 3 times, first time before any data is loaded, second time when data is loaded, third time when the map is zoomed in or out.\n    function updateStats() {\n        // Using IQR to measure the spread by removing outliers\n        let areaMin = d3.quantile(props.data, 0.10, d => d.price);\n        let areaMax = d3.quantile(props.data, 0.90, d => d.price);\n        let areaMedian = d3.median(props.data, d => d.price);\n        let carMinCommuteTime = 8 // d3.quantile(props.data, 0.25, d => d.carCommuteTime);\n        let carMaxCommuteTime = 16 // d3.quantile(props.data, 0.75, d => d.carCommuteTime);\n        let transitMinCommuteTime = 24 // d3.quantile(props.data, 0.25, d => d.transitCommuteTime);\n        let transitMaxCommuteTime = 48 // d3.quantile(props.data, 0.75, d => d.transitCommuteTime);\n        let walkingMinCommuteTime = 62 // d3.quantile(props.data, 0.25, d => d.walkingCommuteTime);\n        let walkingMaxCommuteTime = 168 // d3.quantile(props.data, 0.75, d => d.walkingCommuteTime);\n        let bikingMinCommuteTime = 22 // d3.quantile(props.data, 0.25, d => d.bikingCommuteTime);\n        let bikingMaxCommuteTime = 56 // d3.quantile(props.data, 0.75, d => d.bikingCommuteTime);\n        setStats({\n            areaMin: parseInt(areaMin),\n            areaMax: parseInt(areaMax),\n            areaAverage: parseInt(areaMedian),\n            carMinCommuteTime: parseInt(carMinCommuteTime),\n            carMaxCommuteTime: parseInt(carMaxCommuteTime),\n            transitMinCommuteTime: parseInt(transitMinCommuteTime),\n            transitMaxCommuteTime: parseInt(transitMaxCommuteTime),\n            walkingMinCommuteTime: parseInt(walkingMinCommuteTime),\n            walkingMaxCommuteTime: parseInt(walkingMaxCommuteTime),\n            bikingMinCommuteTime: parseInt(bikingMinCommuteTime),\n            bikingMaxCommuteTime: parseInt(bikingMaxCommuteTime),\n        });\n    }\n\n    const [subsetData, setSubsetData] = useState(null)\n    \n    // Update the subset data when the map is zoomed in or out\n    useEffect(() => {\n\n    }, []);\n\n    function convertMinToTime(min) {\n        let hour = Math.floor(min / 60);\n        let minute = min % 60;\n        let res = hour ? `${hour} hr ${minute} min` : `${minute} min`;\n        return res;\n    }\n\n    // Filters the data based on the viewable area of the map and updates the stats in the area\n    const [stats, setStats] = useState(null);\n\n    // Update stats on launch and whenever the subsetData is updated\n    useEffect(() => {\n        updateStats();\n    }, [props.data]);\n\n    // Need an event listener that changes the subset data and stat when the user moves the map or zooms in or out\n\n    if (stats) { //Only render the Area Overview if the stats have been loaded to prevent unncessary renders\n        return (\n            <div className=\"area-stats\" ref={props.innerRef}>\n                <h2 className='area--overview'>Area Overview</h2>\n                <h3 className=\"area--overview-desc\">The overview will be updated when map moves</h3>\n                <h3 className='area--title'>Price</h3>\n                <div className='area--price'>\n                    <h4 className='area--price-summary'> <span className=\"area--low bold\">${stats.areaMin}</span>/month - <span className=\"area--high bold\">${stats.areaMax}</span>/month</h4>\n                    <h4 className='area--price-summary-text'> Median rent price in map area: <span className=\"bold\">${stats.areaAverage}</span></h4>\n                </div>\n\n                <h3 className='area--title'>Commute Time</h3>\n                <div className='area--commute'>\n                    <div className='car-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"bx:car\"></span>\n                        <p>{convertMinToTime(stats.carMinCommuteTime)} to {convertMinToTime(stats.carMaxCommuteTime)}</p>\n                    </div>\n                    <div className='transit-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"bx:train\"></span>\n                        <p>{convertMinToTime(stats.transitMinCommuteTime)} to {convertMinToTime(stats.transitMaxCommuteTime)}</p>\n                    </div>\n                    <div className='walking-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"bx:walk\"></span>\n                        <p>{convertMinToTime(stats.walkingMinCommuteTime)} to {convertMinToTime(stats.walkingMaxCommuteTime)}</p>\n                    </div>\n                    <div className='biking-commmute-time flex'>\n                        <span className=\"iconify\" data-icon=\"ic:baseline-directions-bike\"></span>\n                        <p>{convertMinToTime(stats.bikingMinCommuteTime)} to {convertMinToTime(stats.bikingMaxCommuteTime)}</p>\n                    </div>\n                </div>\n                <h3 className='area--title'>Crime rate</h3>\n                <div className='area--crime flex'>\n                    <p className=\"area--rating\">A</p>\n                    <p className=\"area--rating-description\">(Safer than <span className=\"bold\">70%</span> of US cities)</p>\n                    {/* Placeholder Rating Icon e.g. A, B, C */}\n                </div>\n                <h3 className=\"area--title\">Future rent estimate</h3>\n                {/* May not implement rent estimate on MVP */}\n                {/* <div className='area--rent-estimate'></div>  */}\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}