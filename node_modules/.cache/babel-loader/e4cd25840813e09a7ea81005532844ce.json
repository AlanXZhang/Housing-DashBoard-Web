{"ast":null,"code":"import _slicedToArray from\"/Users/alanzhang/Housing-DashBoard-Web/hd-web/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from'react';import\"./App.css\";import AreaStat from\"./components/AreaStat\";import listingData from'./assets/data/final_df.csv';// This needs to be replaced by a HTTP request\n// import listingData from './assets/data/proc_zillow.csv'; // This needs to be replaced by a HTTP request\nimport Map from\"./components/Map\";import Listings from\"./components/Listings\";import SwapButton from\"./components/SwapButton\";import*as d3 from\"d3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){// Parser function for the csv file\nfunction rowConverter(d){return{sqft:+d.sqft,num_baths:+d.num_baths,num_beds:+d.num_beds,lat:+d.lat,lng:+d.lon,price:+d.price,address:d.address,full_address:d.full_address,zAddress:d.Address,house_type:d.houseType,image:d.Images,description:d.Description,floorplan:d.floorplan,from:d.from};};var areaStatRef=useRef(null);var listingsRef=useRef(null);var switchTab=function switchTab(){if(currTab===\"stats\"){// setCurrTab(\"listings\");\nareaStatRef.current.style.animation=\"slideout .1s normal forwards ease\";setTimeout(function(){setCurrTab(\"listings\");},250);}else{// setCurrTab(\"stats\");\nlistingsRef.current.style.animation=\"slideout .1s normal forwards ease\";setTimeout(function(){setCurrTab(\"stats\");},250);}};// Stores the raw data from the csv file obtained through an API/Fetch call\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),mapData=_useState2[0],setMapData=_useState2[1];var _useState3=useState(\"stats\"),_useState4=_slicedToArray(_useState3,2),currTab=_useState4[0],setCurrTab=_useState4[1];// Loading data from the csv file\nuseEffect(function(){d3.csv(listingData,rowConverter).then(function(listingData){setMapData(listingData);});},[]);if(mapData){{/* Only Render in the Area Stat once the data has been loaded NOTE: data only evaluates to true if it is not null*/}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Map,{data:mapData}),currTab===\"stats\"?/*#__PURE__*/_jsx(AreaStat,{data:mapData,innerRef:areaStatRef}):/*#__PURE__*/_jsx(Listings,{data:mapData,innerRef:listingsRef}),/*#__PURE__*/_jsx(SwapButton,{handleClick:switchTab,state:currTab})]});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"failed\",children:\"Please wait while the data is loaded...\"});}}","map":{"version":3,"names":["React","useState","useEffect","useRef","AreaStat","listingData","Map","Listings","SwapButton","d3","App","rowConverter","d","sqft","num_baths","num_beds","lat","lng","lon","price","address","full_address","zAddress","Address","house_type","houseType","image","Images","description","Description","floorplan","from","areaStatRef","listingsRef","switchTab","currTab","current","style","animation","setTimeout","setCurrTab","mapData","setMapData","csv","then"],"sources":["/Users/alanzhang/Housing-DashBoard-Web/hd-web/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport \"./App.css\";\nimport AreaStat from \"./components/AreaStat\";\nimport listingData from './assets/data/final_df.csv'; // This needs to be replaced by a HTTP request\n// import listingData from './assets/data/proc_zillow.csv'; // This needs to be replaced by a HTTP request\nimport Map from \"./components/Map\";\nimport Listings from \"./components/Listings\"\nimport SwapButton from \"./components/SwapButton\"\nimport * as d3 from \"d3\";\n\nexport default function App() {\n\n    // Parser function for the csv file\n    function rowConverter(d) {\n        return {\n            sqft: +d.sqft,\n            num_baths: +d.num_baths,\n            num_beds: +d.num_beds,\n            lat: +d.lat,\n            lng: +d.lon,\n            price: +d.price,\n            address: d.address,\n            full_address: d.full_address,\n            zAddress: d.Address,\n            house_type: d.houseType,\n            image: d.Images,\n            description: d.Description,\n            floorplan: d.floorplan,\n            from: d.from\n        };\n    };\n\n    const areaStatRef = useRef(null);\n    const listingsRef = useRef(null);\n\n    const switchTab = () => {\n        if (currTab === \"stats\") {\n\n            // setCurrTab(\"listings\");\n\n            areaStatRef.current.style.animation = \"slideout .1s normal forwards ease\";\n            setTimeout(() => {\n                setCurrTab(\"listings\");\n            }, 250);\n        } else {\n\n            // setCurrTab(\"stats\");\n\n            listingsRef.current.style.animation = \"slideout .1s normal forwards ease\";\n            setTimeout(() => {\n                setCurrTab(\"stats\");\n            }, 250);\n        }\n    }\n\n    // Stores the raw data from the csv file obtained through an API/Fetch call\n    const [mapData, setMapData] = useState(null);\n    const [currTab, setCurrTab] = useState(\"stats\");\n\n    // Loading data from the csv file\n    useEffect(() => {\n        d3.csv(listingData, rowConverter)\n            .then((listingData) => {\n                setMapData(listingData);\n            })\n    }, []);\n\n    if (mapData) {\n        {/* Only Render in the Area Stat once the data has been loaded NOTE: data only evaluates to true if it is not null*/ }\n        return (\n            <div className=\"App\">\n                <Map data={mapData} />\n                {currTab === \"stats\" ?\n                    <AreaStat data={mapData} innerRef={areaStatRef} /> :\n                    <Listings data={mapData} innerRef={listingsRef} />\n                }\n                <SwapButton handleClick={switchTab} state={currTab} />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"failed\">\n                Please wait while the data is loaded...\n            </div>\n        )\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}